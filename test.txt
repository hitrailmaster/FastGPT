计算机实际上可以做的事情实质上非常简单，比如计算两个数的和，再比如在内存中寻找到某个地址等等。这些最基础的计算机动作被称为指令 (instruction)。所谓的程序(program)，就是这样一系列指令的所构成的集合。通过程序，我们可以让计算机完成复杂的操作。程序大多数时候被存储为可执行的文件。这样一个可执行文件就像是一个菜谱，计算机可以按照菜谱作出可口的饭菜。
进程是程序的一个具体实现。只有食谱没什么用，我们总要按照食谱的指点真正一步步实行，才能做出菜肴。进程是执行程序的过程，类似于按照食谱，真正去做菜的过程。同一个程序可以执行多次，每次都可以在内存中开辟独立的空间来装载，从而产生多个进程。不同的进程还可以拥有各自独立的IO接口。
简单来说, 一个运行中的程序就被称为进程。进程与程序既有联系又有区别，进程虽然它由程序产生，但它不是程序，更不是程序的一部分。程序只是一个静态的指令集合，不占系统的运行资源；进程是一个随时都可能发生变化的、动态的、使用系统运行资源的程序。
一个运行着的程序，可能包含多个进程。比如宁波城市职业技术学院的网站(www.nbcc.cn)用的Web服务器是Apache服务器，当管理员启动服务后，可能会有好多人来访问，也就是说许多用户来同时请求httpd服务，Apache服务器将会创建有多个httpd进程来同时处理多个用户的请求。
Linux是一个多任务的操作系统，系统上经常同时运行着多个进程。
ps命令就是Linux中最常用、也是非常强大的进程查看命令，ps就是“进程状态”process status英文的缩写，ps可以查看进程在当前时间点的状态。
由于历史原因，ps的选项挺复杂，兼容好几种不同系统语法格式，我们只讨论ps命令标准Linux风格的用法。
我们下面就用一个例子来说明在何种情况下要使用ps命令，如何使用ps命令。
我们编写了一个名为bad.sh的Shell脚本（可在课程网站上下载），bad.sh会根据您的输入产生特定数目的进程，并恶意占用计算机CPU计算资源。 
我们运行这个bad.sh，后面跟一个2 ，表示产生两个进程，执行了这个bad.sh后，主机的响应速度明显下降，这时我们就需要干预一下了，首先我们要找出“罪魁祸首”，也就是找出哪些进程在不正常地大量占用CPU。这时就到了使用ps的时候了。
首先我们可以用 ps的-A选项来列出系统中的所有的进程。显示的每一行均代表一个进程，可以观察到每行都有4个字段，每个字段均为进程的一个属性。
其中PID是这个进程ID，每个进程都有一个独一无二的PID；TTY进程所使用的终端，“?”表示该进程不占用终端；TIME指的是进程运行持续的时间；CMD表示进程对应的程序名。
但是我们没有看到我们想要看到的关键信息，也即进程占用主机CPU计算资源的比例。我们可再添加一个-f选项，表示列出进程的更加完整信息。
此时每行都列出了8个字段，增加的字段有UID，表示进程是由哪个用户运行的；PPID，表示进程父进程的PID，C，表示进程占用主机CPU计算资源的比例，STIME表示进程开始运行的时间。
顺便要提一句，您可能会疑惑什么是父进程，但解释什么是父进程已经超出了我们课程的内容了，如果您想进一步了解这些知识，可以参考《Linux程序设计》一书的第11章。
还是回到我们的操作上来，我们注意到十分特殊的两行，这两行的C值异乎寻常地大，这两个进程几乎各占用了CPU的一半计算资源，显然，这两个进程就是我们要找的“罪魁祸首”了。
此时就可以这两个进程做点儿什么了，我们用kill命令结合进程的PID来终止这两个进程，至于kill 命令，我们会在《操纵进程》一讲中进行详细讨论。
接下来我们再给出一些ps命令的用法示例。
ps命令经常用管道与grep命令连接起来查找特定的进程，如在下面的例子中我们将用ps命令和grep命令来查找名称中能带有sshd字样的进程。
鉴于ps命令输出往往很长，经常需要用 | 管道与 less 命令连接起来分页查看ps输出。
鉴于ps还可跟上-l 选项，列出完整的进程信息，除了前面提到的8个字段外，ps还列出了如下几类信息，F 代表这个进程的旗标 (flag)，S 代表这个进程的运行状态 (STAT)， PRI 代表这个进程的优先级，NI 代表这个进程的Nice 值，ADDR 这个是 kernel function，指出该进程在内存的那个部分，SZ 代表这个进程的使占用的内存大小，WCHAN 代表这个进程是否正在运行当中。
同样的，解释前面这些进程相关的概念已经远远超出了我们课程的内容了，如果您想进一步了解这些知识，仍可以参考《Linux程序设计》一书的第11章。